#ifndef STACK_H
#define STACK_H

#include <stdio.h>
#include "config.h"
#include "error.h"

#define VAR_INFO(var) ((var_info_t) {__FILE__, __LINE__, __PRETTY_FUNCTION__, #var})

#ifdef CANARY
#define ON_CANARY(...) __VA_ARGS__
#else
#define ON_CANARY(...)
#endif

#ifdef HASH
#define ON_HASH(...) __VA_ARGS__
#else
#define ON_HASH(...)
#endif

const size_t DEF_STACK_CAPACITY = 10;
const unsigned char DATA_POISON = 0xBE;
const unsigned long long CANARY_VAL = 0xB1BAB0BAB1BAB0BAull;
static unsigned char const crc8_table[] = {
        0xea, 0xd4, 0x96, 0xa8, 0x12, 0x2c, 0x6e, 0x50, 0x7f, 0x41, 0x03, 0x3d,
        0x87, 0xb9, 0xfb, 0xc5, 0xa5, 0x9b, 0xd9, 0xe7, 0x5d, 0x63, 0x21, 0x1f,
        0x30, 0x0e, 0x4c, 0x72, 0xc8, 0xf6, 0xb4, 0x8a, 0x74, 0x4a, 0x08, 0x36,
        0x8c, 0xb2, 0xf0, 0xce, 0xe1, 0xdf, 0x9d, 0xa3, 0x19, 0x27, 0x65, 0x5b,
        0x3b, 0x05, 0x47, 0x79, 0xc3, 0xfd, 0xbf, 0x81, 0xae, 0x90, 0xd2, 0xec,
        0x56, 0x68, 0x2a, 0x14, 0xb3, 0x8d, 0xcf, 0xf1, 0x4b, 0x75, 0x37, 0x09,
        0x26, 0x18, 0x5a, 0x64, 0xde, 0xe0, 0xa2, 0x9c, 0xfc, 0xc2, 0x80, 0xbe,
        0x04, 0x3a, 0x78, 0x46, 0x69, 0x57, 0x15, 0x2b, 0x91, 0xaf, 0xed, 0xd3,
        0x2d, 0x13, 0x51, 0x6f, 0xd5, 0xeb, 0xa9, 0x97, 0xb8, 0x86, 0xc4, 0xfa,
        0x40, 0x7e, 0x3c, 0x02, 0x62, 0x5c, 0x1e, 0x20, 0x9a, 0xa4, 0xe6, 0xd8,
        0xf7, 0xc9, 0x8b, 0xb5, 0x0f, 0x31, 0x73, 0x4d, 0x58, 0x66, 0x24, 0x1a,
        0xa0, 0x9e, 0xdc, 0xe2, 0xcd, 0xf3, 0xb1, 0x8f, 0x35, 0x0b, 0x49, 0x77,
        0x17, 0x29, 0x6b, 0x55, 0xef, 0xd1, 0x93, 0xad, 0x82, 0xbc, 0xfe, 0xc0,
        0x7a, 0x44, 0x06, 0x38, 0xc6, 0xf8, 0xba, 0x84, 0x3e, 0x00, 0x42, 0x7c,
        0x53, 0x6d, 0x2f, 0x11, 0xab, 0x95, 0xd7, 0xe9, 0x89, 0xb7, 0xf5, 0xcb,
        0x71, 0x4f, 0x0d, 0x33, 0x1c, 0x22, 0x60, 0x5e, 0xe4, 0xda, 0x98, 0xa6,
        0x01, 0x3f, 0x7d, 0x43, 0xf9, 0xc7, 0x85, 0xbb, 0x94, 0xaa, 0xe8, 0xd6,
        0x6c, 0x52, 0x10, 0x2e, 0x4e, 0x70, 0x32, 0x0c, 0xb6, 0x88, 0xca, 0xf4,
        0xdb, 0xe5, 0xa7, 0x99, 0x23, 0x1d, 0x5f, 0x61, 0x9f, 0xa1, 0xe3, 0xdd,
        0x67, 0x59, 0x1b, 0x25, 0x0a, 0x34, 0x76, 0x48, 0xf2, 0xcc, 0x8e, 0xb0,
        0xd0, 0xee, 0xac, 0x92, 0x28, 0x16, 0x54, 0x6a, 0x45, 0x7b, 0x39, 0x07,
        0xbd, 0x83, 0xc1, 0xff};

enum resize_mode_t {
        REDUCE   = -1,
        INCREASE = 1,
};

struct var_info_t {
        const char *file_name     = nullptr;
        int line                  = 0;
        const char *func_name     = nullptr;
        const char* init_var_name = nullptr;
};

struct stack_t {
        ON_CANARY(unsigned long long left_canary = CANARY_VAL;)
        var_info_t var_info {};
        elem_t *data = nullptr;
        size_t size = 0;
        size_t capacity = 0;
        ON_HASH(unsigned crc_hash = 0;)
        ON_CANARY(unsigned long long right_canary = CANARY_VAL;)
};

// Creates stack.
long long
stack_ctor(stack_t *stack, unsigned int capacity, var_info_t var_info);
// Pushes element to the stack.
long long
stack_push(stack_t *stack, elem_t elem);
// Pops the elemnt out of the stack.
long long
stack_pop(stack_t *stack, elem_t *ret_val);
// Deconstructs stack.
long long
stack_dtor(stack_t *stack);
// Prints all available information about stack.
void
stack_dump(stack_t stack, var_info_t cur_var_info);
// Checks condition of stack.
long long
verify_stack(stack_t *stack);

#endif // STACK_H

